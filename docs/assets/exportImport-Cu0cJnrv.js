import{d as g,s as n}from"./dataManager-C8rOmH55.js";import{l as i,E as u}from"./utils-Amc2d86L.js";class w{static async exportAllData(){try{i.show("Exportiere Daten...");const e=await g.loadAllAppData(),t={version:"1.0",exportDate:new Date().toISOString(),appVersion:"FIFA-Tracker-v1.0",data:e,totalRecords:this.calculateTotalRecords(e)},a=JSON.stringify(t,null,2),o=new Blob([a],{type:"application/json"}),l=document.createElement("a");return l.href=URL.createObjectURL(o),l.download=`fifa-tracker-backup-${new Date().toISOString().split("T")[0]}.json`,l.click(),i.hide(),{success:!0,message:"Daten erfolgreich exportiert!"}}catch(e){return i.hide(),u.handle(e,"Fehler beim Exportieren der Daten"),{success:!1,error:e.message}}}static async importData(e){try{i.show("Importiere Daten...");const t=await this.readFileAsText(e),a=JSON.parse(t);if(!this.validateImportData(a))throw new Error("Ungültiges Backup-Format");const o=`Backup vom ${new Date(a.exportDate).toLocaleDateString("de-DE")} importieren?

Enthält ${a.totalRecords} Datensätze.
WARNUNG: Aktuelle Daten werden überschrieben!`;return confirm(o)?(await this.importToDatabase(a.data),i.hide(),window.renderCurrentTab&&await window.renderCurrentTab(),{success:!0,message:`${a.totalRecords} Datensätze erfolgreich importiert!`,importDate:a.exportDate}):(i.hide(),{success:!1,cancelled:!0})}catch(t){return i.hide(),u.handle(t,"Fehler beim Importieren der Daten"),{success:!1,error:t.message}}}static async exportPlayerStats(){try{i.show("Exportiere Spieler-Statistiken...");const e=await g.getAllPlayers(),t=await g.getAllMatches(),a=e.map(r=>{const m=t.filter(c=>{var f,h;return((f=c.aek_players)==null?void 0:f.includes(r.id))||((h=c.real_players)==null?void 0:h.includes(r.id))}),d=m.reduce((c,f)=>{const h=r.team==="AEK"?f.aek_goals||[]:f.real_goals||[];return c+h.filter(y=>y.player_id===r.id).length},0),D=m.filter(c=>r.team==="AEK"?(c.aek_score||0)>(c.real_score||0):(c.real_score||0)>(c.aek_score||0)).length;return{name:r.name,team:r.team,position:r.position,matches:m.length,goals:d,wins:D,winRate:m.length>0?(D/m.length*100).toFixed(1)+"%":"0%",goalsPerGame:m.length>0?(d/m.length).toFixed(2):"0.00"}}),o=`Name,Team,Position,Spiele,Tore,Siege,Siegrate,Tore pro Spiel
`,l=a.map(r=>`"${r.name}","${r.team}","${r.position}",${r.matches},${r.goals},${r.wins},"${r.winRate}","${r.goalsPerGame}"`).join(`
`),x=o+l,b=new Blob([x],{type:"text/csv;charset=utf-8;"}),p=document.createElement("a");return p.href=URL.createObjectURL(b),p.download=`spieler-statistiken-${new Date().toISOString().split("T")[0]}.csv`,p.click(),i.hide(),{success:!0,message:"Spieler-Statistiken erfolgreich exportiert!"}}catch(e){return i.hide(),u.handle(e,"Fehler beim Exportieren der Spieler-Statistiken"),{success:!1,error:e.message}}}static readFileAsText(e){return new Promise((t,a)=>{const o=new FileReader;o.onload=l=>t(l.target.result),o.onerror=l=>a(l),o.readAsText(e)})}static validateImportData(e){return e&&e.version&&e.exportDate&&e.data&&typeof e.data=="object"}static calculateTotalRecords(e){let t=0;return e.players&&(t+=e.players.length),e.matches&&(t+=e.matches.length),e.bans&&(t+=e.bans.length),e.transactions&&(t+=e.transactions.length),e.finances&&(t+=e.finances.length),t}static async importToDatabase(e){const{user:t}=await n.auth.getUser();if(!t.user)throw new Error("Nicht angemeldet");e.players&&(await n.from("players").delete().neq("id","never-match"),e.players.length>0&&await n.from("players").insert(e.players)),e.matches&&(await n.from("matches").delete().neq("id","never-match"),e.matches.length>0&&await n.from("matches").insert(e.matches)),e.bans&&(await n.from("bans").delete().neq("id","never-match"),e.bans.length>0&&await n.from("bans").insert(e.bans)),e.transactions&&(await n.from("transactions").delete().neq("id","never-match"),e.transactions.length>0&&await n.from("transactions").insert(e.transactions)),e.finances&&(await n.from("finances").delete().neq("id","never-match"),e.finances.length>0&&await n.from("finances").insert(e.finances))}}window.exportAllData=async function(){const s=await w.exportAllData();s.success?alert("✅ "+s.message):alert("❌ Export fehlgeschlagen: "+s.error)};window.exportPlayerStats=async function(){const s=await w.exportPlayerStats();s.success?alert("✅ "+s.message):alert("❌ Export fehlgeschlagen: "+s.error)};window.handleImportFile=async function(s){const e=s.files[0];if(!e)return;const t=await w.importData(e);t.success?alert("✅ "+t.message):t.cancelled||alert("❌ Import fehlgeschlagen: "+t.error),s.value=""};export{w as DataExportImport};
