import{q as S,v as E,w as T}from"./main-KMfuTx-u.js";const x={auth:{persistSession:!0,autoRefreshToken:!0,detectSessionInUrl:!0,storageKey:"supabase.auth.token",autoRefreshTokenRetryAttempts:5,tokenRefreshMargin:60},global:{headers:{"X-Client-Info":"fifa-tracker/1.0.0","X-Client-Version":"2.0.0"}},db:{schema:"public"},realtime:{params:{eventsPerSecond:10}}},I=()=>{let m=null,e=[],s=new Map,n="excellent";const t={players:[{id:1,name:"Max M√ºller",team:"AEK",position:"ST",value:12e4,goals:3,created_at:"2024-01-01"},{id:2,name:"Tom Schmidt",team:"AEK",position:"TH",value:1e5,goals:1,created_at:"2024-01-02"},{id:3,name:"Leon Wagner",team:"AEK",position:"IV",value:9e4,goals:1,created_at:"2024-01-03"},{id:4,name:"Tim Fischer",team:"AEK",position:"ZM",value:85e3,goals:1,created_at:"2024-01-04"},{id:5,name:"Jan Becker",team:"Real",position:"ST",value:11e4,goals:4,created_at:"2024-01-05"},{id:6,name:"Paul Klein",team:"Real",position:"TH",value:95e3,goals:1,created_at:"2024-01-06"},{id:7,name:"Lukas Wolf",team:"Real",position:"IV",value:88e3,goals:1,created_at:"2024-01-07"},{id:8,name:"Ben Richter",team:"Real",position:"ZM",value:92e3,goals:1,created_at:"2024-01-08"},{id:9,name:"Alex Weber",team:"Ehemalige",position:"ST",value:75e3,goals:2,created_at:"2024-01-09"},{id:10,name:"Chris Meyer",team:"Ehemalige",position:"ZM",value:7e4,goals:0,created_at:"2024-01-10"}],matches:[{id:1,teama:"AEK",teamb:"Real",goalsa:2,goalsb:1,date:"2024-08-12",created_at:"2024-08-12",manofthematch:"Max M√ºller",goalslista:["Max M√ºller","Tom Schmidt"],goalslistb:["Jan Becker"]},{id:2,teama:"AEK",teamb:"Real",goalsa:1,goalsb:3,date:"2024-08-10",created_at:"2024-08-10",manofthematch:"Jan Becker",goalslista:["Leon Wagner"],goalslistb:["Jan Becker","Paul Klein","Lukas Wolf"]},{id:3,teama:"AEK",teamb:"Real",goalsa:0,goalsb:2,date:"2024-08-08",created_at:"2024-08-08",manofthematch:"Ben Richter",goalslista:[],goalslistb:["Jan Becker","Ben Richter"]},{id:4,teama:"AEK",teamb:"Real",goalsa:2,goalsb:2,date:"2024-08-05",created_at:"2024-08-05",manofthematch:"Max M√ºller",goalslista:["Max M√ºller","Tim Fischer"],goalslistb:["Jan Becker","Paul Klein"]}],bans:[{id:1,player_id:1,matches_remaining:2,reason:"Gelb-Rot Karte",created_at:"2024-08-01"},{id:2,player_id:5,matches_remaining:1,reason:"Unsportlichkeit",created_at:"2024-08-05"}],transactions:[{id:1,amount:-5e4,info:"Spielerkauf: Max M√ºller",team:"AEK",date:"2024-08-10",type:"Spielerkauf",match_id:null},{id:2,amount:3e4,info:"Spielerverkauf: Klaus Meyer",team:"AEK",date:"2024-08-11",type:"Spielerverkauf",match_id:null},{id:3,amount:-45e3,info:"Spielerkauf: Jan Becker",team:"Real",date:"2024-08-10",type:"Spielerkauf",match_id:null},{id:4,amount:25e3,info:"Sponsoring Einnahme",team:"Real",date:"2024-08-11",type:"Sonstiges",match_id:null},{id:5,amount:5e3,info:"Match-Sieg Preisgeld",team:"AEK",date:"2024-08-12",type:"Preisgeld",match_id:1},{id:6,amount:3e3,info:"Match-Niederlage Preisgeld",team:"Real",date:"2024-08-12",type:"Preisgeld",match_id:1},{id:7,amount:1500,info:"SdS Bonus: Max M√ºller",team:"AEK",date:"2024-08-12",type:"SdS Bonus",match_id:1},{id:8,amount:2e3,info:"Liga-Bonus",team:"AEK",date:"2024-08-13",type:"Sonstiges",match_id:null},{id:9,amount:-1e3,info:"Kartenstrafe",team:"Real",date:"2024-08-13",type:"Strafe",match_id:null},{id:10,amount:3e3,info:"Match-Niederlage Preisgeld",team:"AEK",date:"2024-08-10",type:"Preisgeld",match_id:2},{id:11,amount:5e3,info:"Match-Sieg Preisgeld",team:"Real",date:"2024-08-10",type:"Preisgeld",match_id:2},{id:12,amount:1500,info:"SdS Bonus: Jan Becker",team:"Real",date:"2024-08-10",type:"SdS Bonus",match_id:2},{id:13,amount:3e3,info:"Match-Niederlage Preisgeld",team:"AEK",date:"2024-08-08",type:"Preisgeld",match_id:3},{id:14,amount:5e3,info:"Match-Sieg Preisgeld",team:"Real",date:"2024-08-08",type:"Preisgeld",match_id:3},{id:15,amount:1500,info:"SdS Bonus: Ben Richter",team:"Real",date:"2024-08-08",type:"SdS Bonus",match_id:3},{id:16,amount:4e3,info:"Unentschieden Preisgeld",team:"AEK",date:"2024-08-05",type:"Preisgeld",match_id:4},{id:17,amount:4e3,info:"Unentschieden Preisgeld",team:"Real",date:"2024-08-05",type:"Preisgeld",match_id:4},{id:18,amount:1500,info:"SdS Bonus: Max M√ºller",team:"AEK",date:"2024-08-05",type:"SdS Bonus",match_id:4}],finances:[{id:1,team:"AEK",balance:15e4,debt:0,created_at:"2024-01-01"},{id:2,team:"Real",balance:175e3,debt:0,created_at:"2024-01-01"}],spieler_des_spiels:[{id:1,name:"Max M√ºller",team:"AEK",count:3,created_at:"2024-08-01"},{id:2,name:"Jan Becker",team:"Real",count:2,created_at:"2024-08-05"},{id:3,name:"Tom Schmidt",team:"AEK",count:2,created_at:"2024-08-08"},{id:4,name:"Paul Klein",team:"Real",count:1,created_at:"2024-08-10"},{id:5,name:"Leon Wagner",team:"AEK",count:1,created_at:"2024-08-12"},{id:6,name:"Lukas Wolf",team:"Real",count:0,created_at:"2024-08-13"},{id:7,name:"Tim Fischer",team:"AEK",count:0,created_at:"2024-08-13"},{id:8,name:"Ben Richter",team:"Real",count:0,created_at:"2024-08-13"}],managers:[{id:1,name:"Alexander",gewicht:110,created_at:"2024-01-01"},{id:2,name:"Philip",gewicht:105,created_at:"2024-01-01"}]},i=(a,r={})=>{let u=[...t[a]||[]];if(r.conditions&&Array.isArray(r.conditions))for(const d of r.conditions){const{type:o,column:c,value:h}=d;switch(o){case"eq":u=u.filter(f=>f[c]===h);break;case"neq":u=u.filter(f=>f[c]!==h);break;case"gt":u=u.filter(f=>f[c]>h);break;case"gte":u=u.filter(f=>f[c]>=h);break;case"lt":u=u.filter(f=>f[c]<h);break;case"lte":u=u.filter(f=>f[c]<=h);break;case"like":const p=new RegExp(h.replace(/%/g,".*"),"i");u=u.filter(f=>p.test(f[c]));break;case"in":u=u.filter(f=>h.includes(f[c]));break}}else{if(r.eq){const[d,o]=r.eq;u=u.filter(c=>c[d]===o)}if(r.neq){const[d,o]=r.neq;u=u.filter(c=>c[d]!==o)}if(r.gt){const[d,o]=r.gt;u=u.filter(c=>c[d]>o)}if(r.gte){const[d,o]=r.gte;u=u.filter(c=>c[d]>=o)}if(r.lt){const[d,o]=r.lt;u=u.filter(c=>c[d]<o)}if(r.lte){const[d,o]=r.lte;u=u.filter(c=>c[d]<=o)}if(r.like){const[d,o]=r.like,c=new RegExp(o.replace(/%/g,".*"),"i");u=u.filter(h=>c.test(h[d]))}if(r.in){const[d,o]=r.in;u=u.filter(c=>o.includes(c[d]))}}if(r.order){const[d,o="asc"]=r.order;u.sort((c,h)=>o==="desc"?h[d]>c[d]?1:-1:c[d]>h[d]?1:-1)}if(r.range){const[d,o]=r.range;u=u.slice(d,o+1)}else r.limit&&(u=u.slice(0,r.limit));return u};return{auth:{getSession:()=>{if(!m)try{const a=localStorage.getItem("supabase.auth.token");if(a){const r=JSON.parse(a);r.expires_at&&r.expires_at>Date.now()/1e3?(m=r,console.log("‚úÖ Restored demo session from localStorage")):(localStorage.removeItem("supabase.auth.token"),console.log("üîÑ Demo session expired, removed from localStorage"))}}catch(a){console.warn("Could not restore demo session:",a),localStorage.removeItem("supabase.auth.token")}return Promise.resolve({data:{session:m}})},onAuthStateChange:a=>(console.warn("Supabase auth not available - using fallback"),e.push(a),setTimeout(()=>a(m?"SIGNED_IN":"SIGNED_OUT",m),100),{data:{subscription:{unsubscribe:()=>{e=e.filter(r=>r!==a)}}}}),signInWithPassword:({email:a,password:r})=>{console.warn("‚ö†Ô∏è Supabase signInWithPassword not available - using enhanced fallback demo auth");const u=100;return new Promise(d=>{setTimeout(()=>{if(!a||!r){d({error:new Error("E-Mail und Passwort sind erforderlich.")});return}if(!a.includes("@")){d({error:new Error("Bitte geben Sie eine g√ºltige E-Mail-Adresse ein.")});return}if(r.length<3){d({error:new Error("Passwort zu kurz (mindestens 3 Zeichen f√ºr Demo).")});return}m={user:{id:"demo-user-"+Date.now(),email:a,created_at:new Date().toISOString(),app_metadata:{provider:"demo",providers:["demo"]},user_metadata:{demo_mode:!0,connection_quality:n},aud:"authenticated",role:"authenticated"},access_token:"demo-token-"+Date.now(),refresh_token:"demo-refresh-"+Date.now(),expires_at:Date.now()/1e3+3600,expires_in:3600,token_type:"bearer"};try{localStorage.setItem("supabase.auth.token",JSON.stringify(m))}catch(o){console.warn("Could not persist demo session:",o)}e.forEach(o=>{setTimeout(()=>o("SIGNED_IN",m),50)}),d({data:{user:m.user,session:m},error:null})},u)})},signUp:({email:a,password:r})=>(console.warn("Supabase signUp not available - using fallback demo mode"),!a||!r?Promise.resolve({error:new Error("E-Mail und Passwort sind erforderlich.")}):r.length<6?Promise.resolve({error:new Error("Passwort muss mindestens 6 Zeichen haben.")}):Promise.resolve({data:{user:null,session:null},error:null})),signOut:()=>(console.warn("‚ö†Ô∏è Supabase signOut not available - using enhanced fallback"),new Promise(a=>{m=null;try{localStorage.removeItem("supabase.auth.token")}catch(r){console.warn("Could not clear stored session:",r)}e.forEach(r=>{setTimeout(()=>r("SIGNED_OUT",null),50)}),a({error:null})}))},from:a=>{let r={conditions:[]};const u=()=>{const o=i(a,r);return r={conditions:[]},Promise.resolve({data:o,error:null})},d={select:(o="*")=>d,eq:(o,c)=>(r.conditions.push({type:"eq",column:o,value:c}),d),neq:(o,c)=>(r.conditions.push({type:"neq",column:o,value:c}),d),gt:(o,c)=>(r.gt=[o,c],d),gte:(o,c)=>(r.gte=[o,c],d),lt:(o,c)=>(r.lt=[o,c],d),lte:(o,c)=>(r.lte=[o,c],d),like:(o,c)=>(r.like=[o,c],d),in:(o,c)=>(r.in=[o,c],d),order:(o,c={})=>(r.order=[o,c.ascending===!1?"desc":"asc"],d),range:(o,c)=>(r.range=[o,c],d),limit:o=>(r.limit=o,d),onConflict:o=>d,single:()=>{const o=i(a,r);r={};const c=o.length>0?o[0]:null;return Promise.resolve({data:c,error:null})},maybeSingle:()=>{const o=i(a,r);r={};const c=o.length>0?o[0]:null;return Promise.resolve({data:c,error:null})},then:(o,c)=>{u().then(o,c)},catch:o=>{u().catch(o)},finally:o=>{u().finally(o)},insert:o=>{console.warn("Supabase insert not available in demo mode - simulating success");const h={id:Math.max(...(t[a]||[]).map(p=>p.id||0))+1,...o,created_at:new Date().toISOString()};return t[a]&&t[a].push(h),{select:(p="*")=>(console.warn("Supabase insert().select() not available in demo mode - simulating success"),{single:()=>(console.warn("Supabase insert().select().single() not available in demo mode - simulating success"),Promise.resolve({data:h,error:null})),then:(f,y)=>{Promise.resolve({data:[h],error:null}).then(f,y)},catch:f=>{Promise.resolve({data:[h],error:null}).catch(f)},finally:f=>{Promise.resolve({data:[h],error:null}).finally(f)}}),single:()=>(console.warn("Supabase insert().single() not available in demo mode - simulating success"),Promise.resolve({data:h,error:null})),then:(p,f)=>{Promise.resolve({data:[h],error:null}).then(p,f)},catch:p=>{Promise.resolve({data:[h],error:null}).catch(p)},finally:p=>{Promise.resolve({data:[h],error:null}).finally(p)}}},update:o=>{console.warn("Supabase update not available in demo mode - simulating success");const c={},h={eq:(p,f)=>(console.warn(`Supabase update().eq() not available in demo mode - simulating success for ${p}=${f}`),c[p]=f,{eq:(y,v)=>(c[y]=v,h),then:(y,v)=>{const R=t[a]?t[a].filter(k=>Object.entries(c).every(([L,O])=>k[L]===O)):[];R.forEach(k=>{Object.assign(k,o)}),console.log(`Simulated update of ${R.length} item(s) in ${a} with conditions:`,c),y({data:R,error:null})}}),then:(p,f)=>{const y=i(a,r);r={},y.forEach(v=>{Object.assign(v,o)}),Promise.resolve({data:y,error:null}).then(p,f)},catch:p=>{const f=i(a,r);r={},f.forEach(y=>{Object.assign(y,o)}),Promise.resolve({data:f,error:null}).catch(p)},finally:p=>{const f=i(a,r);r={},f.forEach(y=>{Object.assign(y,o)}),Promise.resolve({data:f,error:null}).finally(p)}};return h},delete:()=>(console.warn("Supabase delete not available in demo mode - simulating success"),{eq:(o,c)=>{console.warn(`Supabase delete().eq() not available in demo mode - simulating success for ${o}=${c}`);const h=t[a]?t[a].filter(p=>p[o]===c):[];return t[a]&&h.length>0&&(t[a]=t[a].filter(p=>p[o]!==c),console.log(`Simulated deletion of ${h.length} item(s) from ${a} where ${o}=${c}`)),Promise.resolve({data:h,error:null})},then:(o,c)=>{const h=i(a,r);r={},t[a]&&h.length>0&&(t[a]=t[a].filter(p=>!h.some(f=>f.id===p.id))),o({data:h,error:null})}})};return d},channel:(a="default")=>{console.warn("‚ö†Ô∏è Supabase realtime not available - using enhanced fallback simulation");let r=[],u=!1;const d={on:(o,c,h)=>(console.log(`üì° Simulating real-time subscription for ${o} on ${(c==null?void 0:c.table)||"unknown table"}`),r.push({event:o,config:c,callback:h,id:Math.random().toString(36).substr(2,9)}),d),subscribe:o=>{if(console.log("üì° Simulating subscription activation..."),u=!0,s.set(a,{subscriptions:r,isActive:!0,created:Date.now()}),setTimeout(()=>{typeof o=="function"&&o("SUBSCRIBING")},50),setTimeout(()=>{typeof o=="function"&&(o("SUBSCRIBED"),console.log("‚úÖ Real-time subscription simulation active"))},100),r.some(c=>{var h;return(h=c.config)==null?void 0:h.table})){const c=setInterval(()=>{if(!u){clearInterval(c);return}Math.random()<.1&&r.forEach(h=>{var p;if((p=h.config)!=null&&p.table&&typeof h.callback=="function"){const f={eventType:["INSERT","UPDATE","DELETE"][Math.floor(Math.random()*3)],new:{id:Math.floor(Math.random()*1e3),updated_at:new Date().toISOString()},old:{},table:h.config.table,schema:"public",commit_timestamp:new Date().toISOString()};console.log("üì° Simulated real-time update:",f),h.callback(f)}})},5e3)}return d},unsubscribe:()=>(console.log("üì° Unsubscribing from real-time channel simulation"),u=!1,s.delete(a),Promise.resolve({error:null}))};return d},removeChannel:a=>(console.log("üì° Removing real-time channel simulation"),a&&typeof a.unsubscribe=="function"&&a.unsubscribe(),Promise.resolve({error:null}))}};var D,_;const C=typeof process<"u"&&((D=process==null?void 0:process.env)==null?void 0:D.VITE_SUPABASE_URL)||typeof process<"u"&&((_=process==null?void 0:process.env)==null?void 0:_.REACT_APP_SUPABASE_URL)||"https://buduldeczjwnjvsckqat.supabase.co";var P,M;const q=typeof process<"u"&&((P=process==null?void 0:process.env)==null?void 0:P.VITE_SUPABASE_ANON_KEY)||typeof process<"u"&&((M=process==null?void 0:process.env)==null?void 0:M.REACT_APP_SUPABASE_ANON_KEY)||"sb_publishable_wcOHaKNEW9rQ3anrRNlEpA_r1_wGda3";let g,w=!1;async function N(){const m=["https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2/dist/umd/supabase.min.js","https://unpkg.com/@supabase/supabase-js@2/dist/umd/supabase.min.js","https://cdn.skypack.dev/@supabase/supabase-js@2"];for(const e of m)try{console.log(`üîÑ Attempting to load Supabase from: ${e}`);const s=document.createElement("script");s.src=e,s.crossOrigin="anonymous";const n=new Promise((t,i)=>{s.onload=()=>{const l=window.supabase||window.Supabase||window.supabaseJs;l&&l.createClient?(console.log(`‚úÖ Successfully loaded Supabase from: ${e}`),window.supabase=l,t(!0)):i(new Error("Supabase object not found after loading"))},s.onerror=()=>i(new Error(`Failed to load script from ${e}`)),setTimeout(()=>i(new Error(`Timeout loading from ${e}`)),5e3)});return document.head.appendChild(s),await n,s.remove(),!0}catch(s){console.warn(`‚ùå Failed to load from ${e}:`,s.message),document.querySelectorAll(`script[src="${e}"]`).forEach(t=>t.remove())}throw new Error("All CDN sources failed to load")}async function A(){try{const m=window.supabase||window.Supabase||window.supabaseJs;(!m||!m.createClient)&&await N();const e=window.supabase||window.Supabase||window.supabaseJs;if(!e||!e.createClient)throw new Error("Failed to load Supabase library from CDN");console.log("üîÑ Creating Supabase client with credentials..."),console.log("URL:",C),console.log("Key:",q.substring(0,20)+"..."),g=e.createClient(C,q,x);try{const{data:s,error:n}=await g.from("players").select("id").limit(1);n?console.warn("Database test query failed:",n.message):console.log("‚úÖ Database connection test successful")}catch(s){console.warn("Database connection test failed:",s.message)}console.log("‚úÖ Supabase client created successfully"),w=!1;return}catch(m){console.warn("‚ö†Ô∏è Failed to connect to Supabase, using fallback mode:",m.message),console.log("üìù Fallback mode provides demo data and simulated database operations"),w=!0,g=I()}}try{const m=window.supabase||window.Supabase||window.supabaseJs;if(m&&m.createClient)console.log("üîÑ Creating Supabase client..."),g=m.createClient(C,q,x),console.log("‚úÖ Supabase client created successfully"),w=!1;else throw new Error("Supabase library not available (CDN may be blocked)")}catch(m){console.warn("‚ö†Ô∏è Initial Supabase connection failed, using fallback:",m.message),console.log("üìù Will attempt CDN loading and retry automatically..."),w=!0,g=I()}typeof window<"u"&&(window.initializeSupabase=A,w&&(console.log("üîÑ Scheduling automatic retry of Supabase initialization..."),setTimeout(async()=>{try{console.log("üîÑ Retrying Supabase initialization..."),await A(),w||(console.log("‚úÖ Supabase initialization successful on retry"),window.dispatchEvent(new CustomEvent("supabase-reconnected",{detail:{timestamp:new Date().toISOString()}})))}catch{console.log("üîÑ Retry failed, staying in fallback mode")}},5e3)));class K{constructor(e){this.client=e,this.maxRetries=3,this.baseDelay=1e3,this.maxDelay=3e4,this.connectionStats={totalRequests:0,successfulRequests:0,failedRequests:0,averageResponseTime:0,lastResponseTime:0},this.requestQueue=[],this.isProcessingQueue=!1,this.maxConcurrentRequests=5,this.activeRequests=0}getStats(){return{...this.connectionStats,successRate:this.connectionStats.totalRequests>0?(this.connectionStats.successfulRequests/this.connectionStats.totalRequests*100).toFixed(2)+"%":"0%",activeRequests:this.activeRequests,queuedRequests:this.requestQueue.length}}resetStats(){this.connectionStats={totalRequests:0,successfulRequests:0,failedRequests:0,averageResponseTime:0,lastResponseTime:0}}async retryOperation(e,s=this.maxRetries,n="normal"){return new Promise((t,i)=>{const l={operation:e,maxRetries:s,priority:n,resolve:t,reject:i,timestamp:Date.now()};n==="high"?this.requestQueue.unshift(l):this.requestQueue.push(l),this.processQueue()})}async processQueue(){if(!(this.isProcessingQueue||this.activeRequests>=this.maxConcurrentRequests)){for(this.isProcessingQueue=!0;this.requestQueue.length>0&&this.activeRequests<this.maxConcurrentRequests;){const e=this.requestQueue.shift();this.executeRequest(e)}this.isProcessingQueue=!1}}async executeRequest(e){this.activeRequests++,this.connectionStats.totalRequests++;const s=performance.now();let n=null;try{for(let t=1;t<=e.maxRetries;t++)try{const i=await e.operation();if(i.error)throw i.error;const l=performance.now()-s;this.updateResponseTimeMetrics(l),this.connectionStats.successfulRequests++,e.resolve(i);return}catch(i){if(n=i,console.warn(`Database operation failed (attempt ${t}/${e.maxRetries}):`,i),this.isNonRetryableError(i)||t===e.maxRetries)break;const l=Math.min(this.baseDelay*Math.pow(2,t-1),this.maxDelay),a=Math.random()*.1*l,r=l+a;await new Promise(u=>setTimeout(u,r))}this.connectionStats.failedRequests++,e.reject(n)}catch(t){this.connectionStats.failedRequests++,e.reject(t)}finally{this.activeRequests--,setTimeout(()=>this.processQueue(),0)}}updateResponseTimeMetrics(e){this.connectionStats.lastResponseTime=e,this.connectionStats.averageResponseTime===0?this.connectionStats.averageResponseTime=e:this.connectionStats.averageResponseTime=this.connectionStats.averageResponseTime*.8+e*.2}isNonRetryableError(e){if(!e)return!1;const s=e.message?e.message.toLowerCase():"",n=e.code;return!!(s.includes("auth")||s.includes("unauthorized")||s.includes("forbidden")||n==="PGRST301"||n==="PGRST116"||n==="23505"||n==="23503"||e.status&&e.status>=400&&e.status<500)}async select(e,s="*",n={},t="normal"){if(!e)throw new Error("Table name is required");return this.retryOperation(async()=>{let i=this.client.from(e).select(s);return n.eq&&Object.entries(n.eq).forEach(([l,a])=>{a!=null&&(i=i.eq(l,a))}),n.neq&&Object.entries(n.neq).forEach(([l,a])=>{i=i.neq(l,a)}),n.gt&&Object.entries(n.gt).forEach(([l,a])=>{i=i.gt(l,a)}),n.gte&&Object.entries(n.gte).forEach(([l,a])=>{i=i.gte(l,a)}),n.lt&&Object.entries(n.lt).forEach(([l,a])=>{i=i.lt(l,a)}),n.lte&&Object.entries(n.lte).forEach(([l,a])=>{i=i.lte(l,a)}),n.like&&Object.entries(n.like).forEach(([l,a])=>{i=i.like(l,a)}),n.in&&Object.entries(n.in).forEach(([l,a])=>{Array.isArray(a)&&a.length>0&&(i=i.in(l,a))}),n.order&&(Array.isArray(n.order)?n.order.forEach(l=>{i=i.order(l.column,{ascending:l.ascending??!0})}):i=i.order(n.order.column,{ascending:n.order.ascending??!0})),n.limit&&(i=i.limit(Math.min(n.limit,1e3))),n.range&&(i=i.range(n.range.from,n.range.to)),await i},this.maxRetries,t)}async insert(e,s,n={},t="normal"){if(!e)throw new Error("Table name is required");if(!s)throw new Error("Data is required for insert");return this.retryOperation(async()=>{let i=this.client.from(e).insert(s);return n.returning!==!1&&(i=i.select()),n.onConflict&&(i=i.onConflict(n.onConflict)),await i},this.maxRetries,t)}async update(e,s,n={},t={},i="normal"){if(!e)throw new Error("Table name is required");if(!s)throw new Error("Data is required for update");if(Object.keys(n).length===0)throw new Error("At least one condition is required for update");return this.retryOperation(async()=>{let l=this.client.from(e).update(s);return Object.entries(n).forEach(([a,r])=>{r!=null&&(l=l.eq(a,r))}),t.returning!==!1&&(l=l.select()),await l},this.maxRetries,i)}async deleteRow(e,s={},n="normal"){if(!e)throw new Error("Table name is required");if(Object.keys(s).length===0)throw new Error("At least one condition is required for delete");return this.retryOperation(async()=>{let t=this.client.from(e).delete();return Object.entries(s).forEach(([i,l])=>{l!=null&&(t=t.eq(i,l))}),await t},this.maxRetries,n)}async upsert(e,s,n={},t="normal"){if(!e)throw new Error("Table name is required");if(!s)throw new Error("Data is required for upsert");return this.retryOperation(async()=>{let i=this.client.from(e).upsert(s);return n.onConflict&&(i=i.onConflict(n.onConflict)),n.returning!==!1&&(i=i.select()),await i},this.maxRetries,t)}async batchSelect(e){const s=e.map(t=>this.select(t.table,t.query,t.options,t.priority||"normal"));return(await Promise.allSettled(s)).map((t,i)=>({success:t.status==="fulfilled",data:t.status==="fulfilled"?t.value:null,error:t.status==="rejected"?t.reason:null,operation:e[i]}))}async healthCheck(){try{const e=await this.select("players","id",{limit:1},"high");return{healthy:!0,responseTime:this.connectionStats.lastResponseTime}}catch(e){return{healthy:!1,error:e.message}}}getClient(){return this.client}}const b=new K(g),{data:V}=g.auth.onAuthStateChange((m,e)=>{var n;const s=((n=e==null?void 0:e.user)==null?void 0:n.email)||"No user";console.log(`Auth state changed: ${m}`,s),m==="SIGNED_IN"?(console.log("‚úÖ User signed in successfully"),b.resetStats()):m==="SIGNED_OUT"?(console.log("üëã User signed out"),b.resetStats()):m==="TOKEN_REFRESHED"?e?console.log("üîÑ Auth token refreshed successfully"):(console.error("‚ùå Token refresh failed - user may need to re-authenticate"),window.dispatchEvent(new CustomEvent("supabase-session-expired",{detail:{timestamp:new Date().toISOString()}}))):m==="USER_UPDATED"?console.log("üë§ User profile updated"):m==="PASSWORD_RECOVERY"&&console.log("üîê Password recovery initiated"),window.dispatchEvent(new CustomEvent("auth-state-change",{detail:{event:m,session:e,user:e==null?void 0:e.user}}))});typeof window<"u"&&(window.supabase=g,window.supabaseDb=b,window.supabaseDebug={getStats:()=>b.getStats(),resetStats:()=>b.resetStats(),healthCheck:()=>b.healthCheck(),getQueueLength:()=>b.requestQueue.length,getActiveRequests:()=>b.activeRequests},(window.location.hostname==="localhost"||window.location.hostname==="127.0.0.1")&&setInterval(()=>{const m=b.getStats();m.totalRequests>0&&console.log("üìä Supabase Stats:",m)},6e4));class B{constructor(){this.slowQueryThreshold=2e3,this.slowQueries=[],this.maxSlowQueries=10}logSlowQuery(e,s,n,t){if(s>this.slowQueryThreshold){const i={operation:e,duration:Math.round(s),table:n,query:t||"N/A",timestamp:new Date().toISOString()};this.slowQueries.unshift(i),this.slowQueries.length>this.maxSlowQueries&&this.slowQueries.pop(),console.warn("üêå Slow database query detected:",i)}}getSlowQueries(){return this.slowQueries}clearSlowQueries(){this.slowQueries=[]}}const $=new B;typeof window<"u"&&(window.dbPerformanceMonitor=$);const j=4*60*1e3;class Q{constructor(){this.isConnected=!0,this.reconnectAttempts=0,this.maxReconnectAttempts=5,this.reconnectDelay=1e3,this.maxReconnectDelay=3e4,this.healthCheckInterval=3e4,this.keepAliveTimer=null,this.healthCheckTimer=null,this.reconnectTimer=null,this.listeners=[],this.lastSuccessfulConnection=Date.now(),this.isPaused=!1,this.connectionType="unknown",this.lastError=null,this.connectionMetrics={totalConnections:0,successfulConnections:0,failedConnections:0,averageResponseTime:0,lastResponseTime:0},this.detectConnectionType(),this.startHealthCheck(),this.setupNetworkListeners(),this.startKeepAlive()}detectConnectionType(){w?(this.connectionType="fallback",console.log("üîÑ Connection type: Fallback mode (demo data)")):navigator.onLine?(this.connectionType="real",console.log("‚úÖ Connection type: Real database")):(this.connectionType="offline",this.isConnected=!1,console.log("üì¥ Connection type: Offline"))}addListener(e){this.listeners.push(e),setTimeout(()=>{e({connected:this.isConnected,connectionType:this.connectionType,metrics:this.connectionMetrics,lastError:this.lastError})},0)}removeListener(e){this.listeners=this.listeners.filter(s=>s!==e)}notifyListeners(e){const s={...e,connectionType:this.connectionType,metrics:this.connectionMetrics,timestamp:Date.now()};this.listeners.forEach(n=>{try{n(s)}catch(t){console.error("Error in connection listener:",t)}})}async checkConnection(){const e=performance.now();this.connectionMetrics.totalConnections++;try{if(w){const t=Math.random()*100+50;return this.updateMetrics(t,!0),this.isConnected||(console.log("üîÑ Demo mode - simulating connection restored"),this.isConnected=!0,this.reconnectAttempts=0,this.reconnectDelay=1e3,this.lastSuccessfulConnection=Date.now(),this.lastError=null,this.notifyListeners({connected:!0,reconnected:!0,message:"Demo-Modus aktiv - Simulierte Daten verf√ºgbar"})),!0}if(!navigator.onLine)throw new Error("Keine Internetverbindung");const s=new AbortController,n=setTimeout(()=>s.abort(),1e4);try{const{data:t,error:i}=await g.from("players").select("id").limit(1).abortSignal(s.signal);if(clearTimeout(n),i)throw i;const l=performance.now()-e;return this.updateMetrics(l,!0),this.isConnected||(console.log("‚úÖ Database connection restored"),this.isConnected=!0,this.reconnectAttempts=0,this.reconnectDelay=1e3,this.lastSuccessfulConnection=Date.now(),this.lastError=null,this.connectionType="real",this.notifyListeners({connected:!0,reconnected:!0,message:"Datenbankverbindung wiederhergestellt"})),!0}catch(t){throw clearTimeout(n),t.name==="AbortError"?new Error("Verbindungstest-Timeout (> 10s)"):t}}catch(s){return this.updateMetrics(performance.now()-e,!1),this.lastError=s,console.warn("‚ùå Database connection check failed:",s.message),this.isConnected&&(console.log("üì¥ Database connection lost"),this.isConnected=!1,this.connectionType=s.message.includes("Internetverbindung")?"offline":"disconnected",this.notifyListeners({connected:!1,error:s,message:this.getErrorMessage(s)})),!1}}updateMetrics(e,s){this.connectionMetrics.lastResponseTime=e,s?(this.connectionMetrics.successfulConnections++,this.connectionMetrics.averageResponseTime===0?this.connectionMetrics.averageResponseTime=e:this.connectionMetrics.averageResponseTime=this.connectionMetrics.averageResponseTime*.7+e*.3):this.connectionMetrics.failedConnections++}getErrorMessage(e){if(!e)return"Unbekannter Fehler";const s=e.message.toLowerCase();return s.includes("internetverbindung")||s.includes("network")?"Keine Internetverbindung":s.includes("timeout")?"Verbindungs-Timeout - Server antwortet nicht":s.includes("auth")||s.includes("unauthorized")?"Authentifizierungsfehler - Bitte neu anmelden":s.includes("cdn")||s.includes("blocked")?"CDN blockiert - Fallback-Modus wird verwendet":`Datenbankfehler: ${e.message}`}async attemptReconnection(){if(this.isPaused){console.log("‚è∏Ô∏è Skipping reconnection attempt - monitor is paused");return}if(this.reconnectAttempts>=this.maxReconnectAttempts){console.error("‚ùå Max reconnection attempts reached"),this.notifyListeners({connected:!1,maxAttemptsReached:!0,nextRetry:Date.now()+this.maxReconnectDelay,message:"Maximale Wiederverbindungsversuche erreicht - Warte l√§nger..."}),this.reconnectTimer=setTimeout(()=>{this.isPaused||(console.log("üîÑ Resetting reconnection attempts after extended wait"),this.reconnectAttempts=0,this.reconnectDelay=1e3,this.attemptReconnection())},this.maxReconnectDelay);return}if(this.reconnectAttempts++,console.log(`üîÑ Attempting to reconnect (${this.reconnectAttempts}/${this.maxReconnectAttempts})`),!navigator.onLine){console.log("üì¥ Network is offline, waiting for network recovery..."),this.notifyListeners({connected:!1,networkOffline:!0,reconnecting:!1,message:"Warte auf Netzwerkverbindung..."}),this.reconnectAttempts--,this.reconnectTimer=setTimeout(()=>{this.isPaused||this.attemptReconnection()},5e3);return}if(!await this.checkConnection()&&!this.isPaused){const s=Math.min(this.reconnectDelay*2,this.maxReconnectDelay),n=Math.random()*.3*s;this.reconnectDelay=s+n,this.notifyListeners({connected:!1,reconnecting:!0,attempt:this.reconnectAttempts,nextRetry:Date.now()+this.reconnectDelay,message:`Wiederverbindung... (${this.reconnectAttempts}/${this.maxReconnectAttempts})`}),this.reconnectTimer=setTimeout(()=>{this.isPaused||this.attemptReconnection()},this.reconnectDelay)}}startHealthCheck(){this.healthCheckTimer&&clearInterval(this.healthCheckTimer),this.healthCheckTimer=setInterval(async()=>{if(this.isPaused||!this.isConnected)return;await this.checkConnection()||this.attemptReconnection()},this.healthCheckInterval)}startKeepAlive(){this.keepAliveTimer&&clearInterval(this.keepAliveTimer),this.keepAliveTimer=setInterval(async()=>{if(!this.isPaused&&this.isConnected)try{await g.from("players").select("id").limit(1)}catch(e){console.warn("KeepAlive failed:",e.message)}},j)}stopKeepAlive(){this.keepAliveTimer&&(clearInterval(this.keepAliveTimer),this.keepAliveTimer=null)}pauseHealthChecks(){console.log("Pausing connection health checks"),this.isPaused=!0,this.healthCheckTimer&&(clearInterval(this.healthCheckTimer),this.healthCheckTimer=null),this.reconnectTimer&&(clearTimeout(this.reconnectTimer),this.reconnectTimer=null),this.stopKeepAlive()}resumeHealthChecks(){console.log("Resuming connection health checks"),this.isPaused=!1,this.startHealthCheck(),this.startKeepAlive(),this.isConnected||this.checkConnection()}setupNetworkListeners(){window.addEventListener("online",()=>{console.log("üåê Network connection restored"),this.connectionType=w?"fallback":"real",this.isConnected||(this.reconnectAttempts=0,this.reconnectDelay=1e3,this.checkConnection())}),window.addEventListener("offline",()=>{console.log("üì¥ Network connection lost"),this.isConnected=!1,this.connectionType="offline",this.lastError=new Error("Keine Internetverbindung"),this.notifyListeners({connected:!1,networkOffline:!0,message:"Netzwerkverbindung verloren"})}),window.addEventListener("supabase-session-expired",()=>{console.log("üîê Supabase session expired"),this.isConnected=!1,this.connectionType="expired",this.lastError=new Error("Session abgelaufen"),this.notifyListeners({connected:!1,sessionExpired:!0,message:"Session abgelaufen - Bitte neu anmelden"})}),document.addEventListener("visibilitychange",()=>{document.hidden?(console.log("üì± App hidden - reducing health check frequency"),this.healthCheckInterval=6e4):(console.log("üì± App visible - resuming normal health checks"),this.healthCheckInterval=3e4,this.startHealthCheck(),this.isPaused||this.checkConnection())})}getStatus(){return{connected:this.isConnected,connectionType:this.connectionType,reconnectAttempts:this.reconnectAttempts,maxReconnectAttempts:this.maxReconnectAttempts,lastSuccessfulConnection:this.lastSuccessfulConnection,timeSinceLastConnection:Date.now()-this.lastSuccessfulConnection,isPaused:this.isPaused,lastError:this.lastError,metrics:{...this.connectionMetrics,successRate:this.connectionMetrics.totalConnections>0?Math.round(this.connectionMetrics.successfulConnections/this.connectionMetrics.totalConnections*100):0},networkOnline:navigator.onLine,usingFallback:w}}getDiagnostics(){return{...this.getStatus(),timestamp:new Date().toISOString(),userAgent:navigator.userAgent,connectionSpeed:this.estimateConnectionSpeed(),recommendations:this.getRecommendations()}}estimateConnectionSpeed(){if(this.connectionMetrics.averageResponseTime===0)return"unknown";const e=this.connectionMetrics.averageResponseTime;return e<100?"fast":e<500?"medium":e<1e3?"slow":"very-slow"}getRecommendations(){const e=[];return this.isConnected||(navigator.onLine?this.connectionType==="fallback"?(e.push("CDN ist blockiert - Demo-Modus wird verwendet"),e.push("Konfigurieren Sie Supabase-Credentials f√ºr echte Datenbankverbindung")):this.connectionType==="expired"?e.push("Melden Sie sich erneut an"):e.push("Server tempor√§r nicht erreichbar - Wiederverbindung l√§uft..."):e.push("√úberpr√ºfen Sie Ihre Internetverbindung")),this.connectionMetrics.averageResponseTime>2e3&&e.push("Langsame Verbindung erkannt - √úberpr√ºfen Sie Ihre Netzwerkgeschwindigkeit"),this.connectionMetrics.failedConnections>5&&e.push("H√§ufige Verbindungsfehler - √úberpr√ºfen Sie Ihre Netzwerkstabilit√§t"),e}destroy(){this.healthCheckTimer&&clearInterval(this.healthCheckTimer),this.reconnectTimer&&clearTimeout(this.reconnectTimer),this.keepAliveTimer&&clearInterval(this.keepAliveTimer),this.listeners=[]}}const U=new Q;function F(){return w||U.isConnected}class z{constructor(){this.cache=new Map,this.pendingRequests=new Map,this.cacheExpiry=new Map,this.defaultCacheTTL=3e4,this.batchQueue=[],this.batchTimer=null,this.batchDelay=100,this.validationRules=this.initValidationRules()}initValidationRules(){return{players:{name:{required:!0,type:"string",minLength:1},team:{required:!0,type:"string"},value:{required:!1,type:"number",min:0},goals:{required:!1,type:"number",min:0},position:{required:!1,type:"string"}},matches:{date:{required:!0,type:"string"},teama:{required:!0,type:"string"},teamb:{required:!0,type:"string"},goalsa:{required:!0,type:"number",min:0},goalsb:{required:!0,type:"number",min:0},goalslista:{required:!1},goalslistb:{required:!1},yellowa:{required:!1,type:"number",min:0},reda:{required:!1,type:"number",min:0},yellowb:{required:!1,type:"number",min:0},redb:{required:!1,type:"number",min:0},manofthematch:{required:!1,type:"string"},prizeaek:{required:!1,type:"number"},prizereal:{required:!1,type:"number"}},bans:{player_id:{required:!1,type:"number"},team:{required:!0,type:"string"},type:{required:!0,type:"string"},totalgames:{required:!0,type:"number",min:0},matchesserved:{required:!1,type:"number",min:0},reason:{required:!1,type:"string"}},transactions:{date:{required:!0,type:"string"},type:{required:!0,type:"string"},team:{required:!0,type:"string"},amount:{required:!0,type:"number"},info:{required:!1,type:"string"},match_id:{required:!1,type:"number"}},finances:{team:{required:!0,type:"string"},balance:{required:!1,type:"number"},debt:{required:!1,type:"number"}},spieler_des_spiels:{name:{required:!0,type:"string",minLength:1},team:{required:!0,type:"string"},count:{required:!1,type:"number",min:0}},managers:{name:{required:!1,type:"string",minLength:1},gewicht:{required:!1,type:"number",min:40,max:200},age:{required:!1,type:"number",min:18,max:80}}}}validateData(e,s){const n=this.validationRules[e];if(!n)return{valid:!0};const t=[];for(const[i,l]of Object.entries(n)){const a=s[i];if(l.required&&(a==null||a==="")){t.push(`${i} ist erforderlich`);continue}!l.required&&(a==null||a==="")||(l.type==="string"&&typeof a!="string"?t.push(`${i} muss ein Text sein`):l.type==="number"&&(typeof a!="number"||isNaN(a))&&t.push(`${i} muss eine Zahl sein`),l.type==="string"&&typeof a=="string"&&(l.minLength&&a.length<l.minLength&&t.push(`${i} muss mindestens ${l.minLength} Zeichen haben`),l.maxLength&&a.length>l.maxLength&&t.push(`${i} darf maximal ${l.maxLength} Zeichen haben`)),l.type==="number"&&typeof a=="number"&&(l.min!==void 0&&a<l.min&&t.push(`${i} muss mindestens ${l.min} sein`),l.max!==void 0&&a>l.max&&t.push(`${i} darf maximal ${l.max} sein`)),l.enum&&!l.enum.includes(a)&&t.push(`${i} muss einer der folgenden Werte sein: ${l.enum.join(", ")}`))}return{valid:t.length===0,errors:t}}sanitizeData(e){const s={};for(const[n,t]of Object.entries(e))typeof t=="string"?s[n]=t.trim().replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,""):s[n]=t;return s}getCacheKey(e,s={}){return`${e}:${JSON.stringify(s)}`}isCacheValid(e){const s=this.cacheExpiry.get(e);return s&&Date.now()<s}setCache(e,s,n=this.defaultCacheTTL){this.cache.set(e,s),this.cacheExpiry.set(e,Date.now()+n)}getCache(e){return this.isCacheValid(e)?this.cache.get(e):(this.cache.delete(e),this.cacheExpiry.delete(e),null)}invalidateCache(e=null){if(e)for(const s of this.cache.keys())s.includes(e)&&(this.cache.delete(s),this.cacheExpiry.delete(s));else this.cache.clear(),this.cacheExpiry.clear()}async executeWithRetry(e,s=3){if(!F())throw new Error("Keine Datenbankverbindung verf√ºgbar. Bitte sp√§ter versuchen.");let n;for(let t=1;t<=s;t++)try{const i=await e();if(i&&i.error)throw i.error;return i}catch(i){if(n=i,console.warn(`Database operation failed (attempt ${t}/${s}):`,i),t===s||this.isNonRetryableError(i))break;const l=Math.min(1e3*Math.pow(2,t-1),5e3);await new Promise(a=>setTimeout(a,l))}throw n}isNonRetryableError(e){if(!e)return!1;const s=e.message||"";return s.includes("auth")||s.includes("permission")||s.includes("constraint")||e.code==="PGRST301"||e.code==="PGRST116"}async batchedSelect(e){return(await Promise.allSettled(e.map(n=>this.select(n.table,n.query,n.options)))).map((n,t)=>({key:e[t].key,success:n.status==="fulfilled",data:n.status==="fulfilled"?n.value:null,error:n.status==="rejected"?n.reason:null}))}async select(e,s="*",n={}){const t={...n};if(S(e)&&!t.skipFifaFilter){const r=E();t.eq={...t.eq,...r}}const i=this.getCacheKey(e,{query:s,options:t}),l=this.getCache(i);if(l!==null)return{data:l,fromCache:!0};if(this.pendingRequests.has(i))return this.pendingRequests.get(i);const a=this.executeWithRetry(async()=>{let r=g.from(e).select(s);return t.eq&&Object.entries(t.eq).forEach(([u,d])=>{r=r.eq(u,d)}),t.order&&(r=r.order(t.order.column,{ascending:t.order.ascending??!0})),t.limit&&(r=r.limit(t.limit)),t.range&&(r=r.range(t.range.from,t.range.to)),await r}).then(r=>(this.pendingRequests.delete(i),r&&r.data&&this.setCache(i,r.data),r)).catch(r=>{throw this.pendingRequests.delete(i),r});return this.pendingRequests.set(i,a),a}async insert(e,s){let n=this.sanitizeData(s);S(e)&&(n=T(n));const t=this.validateData(e,n);if(!t.valid)throw new Error(`Validierungsfehler: ${t.errors.join(", ")}`);const i=await this.executeWithRetry(async()=>await g.from(e).insert([n]).select());return this.invalidateCache(e),i}async update(e,s,n){let t=this.sanitizeData(s);S(e)&&!t.fifa_version&&(t=T(t));const i=this.validateData(e,t);if(!i.valid)throw new Error(`Validierungsfehler: ${i.errors.join(", ")}`);const l=await this.executeWithRetry(async()=>{let a=g.from(e).update(t).eq("id",n);if(S(e)){const r=E();a=a.eq("fifa_version",r.fifa_version)}return await a.select()});return this.invalidateCache(e),l}async delete(e,s){if(!s)throw new Error("ID ist erforderlich zum L√∂schen");const n=await this.executeWithRetry(async()=>{let t=g.from(e).delete().eq("id",s);if(S(e)){const i=E();t=t.eq("fifa_version",i.fifa_version)}return await t});return this.invalidateCache(e),n}async upsert(e,s){let n=this.sanitizeData(s);S(e)&&(n=T(n));const t=this.validateData(e,n);if(!t.valid)throw new Error(`Validierungsfehler: ${t.errors.join(", ")}`);const i=await this.executeWithRetry(async()=>await g.from(e).upsert(n).select());return this.invalidateCache(e),i}async getPlayersByTeam(e){return this.select("players","*",{eq:{team:e}})}async getAllPlayers(){return this.select("players","*")}async getAllMatches(){return this.select("matches","*",{order:{column:"id",ascending:!1}})}async getBans(){return this.select("bans","*")}async getFinances(){return this.select("finances","*")}async getTransactions(){return this.select("transactions","*",{order:{column:"id",ascending:!1}})}async getSpielerDesSpiels(){return this.select("spieler_des_spiels","*")}async getManagers(){return this.select("manager","*",{order:{column:"id",ascending:!0}})}async updateManager(e,s){if(!this.validateData("managers",s))throw new Error("Invalid manager data");return this.update("manager",s,e)}async insertManager(e){if(!this.validateData("managers",e))throw new Error("Invalid manager data");return this.insert("manager",e)}async deleteManager(e){return this.delete("manager",e)}async loadAllAppData(){const e=[{key:"matches",table:"matches",query:"*",options:{order:{column:"id",ascending:!1}}},{key:"players",table:"players",query:"*",options:{}},{key:"bans",table:"bans",query:"*",options:{}},{key:"finances",table:"finances",query:"*",options:{}},{key:"transactions",table:"transactions",query:"*",options:{order:{column:"id",ascending:!1}}},{key:"spieler_des_spiels",table:"spieler_des_spiels",query:"*",options:{}},{key:"managers",table:"manager",query:"*",options:{order:{column:"id",ascending:!0}}}],s=await this.batchedSelect(e),n={};for(const t of s)t.success?n[t.key]=t.data.data||[]:(console.error(`Failed to load ${t.key}:`,t.error),n[t.key]=[]);return n.matches&&(n.matches=n.matches.map(t=>{try{typeof t.goalslista=="string"&&(t.goalslista=JSON.parse(t.goalslista)),typeof t.goalslistb=="string"&&(t.goalslistb=JSON.parse(t.goalslistb)),Array.isArray(t.goalslista)||(t.goalslista=[]),Array.isArray(t.goalslistb)||(t.goalslistb=[])}catch(i){console.warn("Error parsing goals for match",t.id,i),t.goalslista=[],t.goalslistb=[]}return t})),n}async healthCheck(){try{return await this.select("players","id",{limit:1}),!0}catch(e){return console.error("Health check failed:",e),!1}}}const J=new z;export{J as d,g as s};
